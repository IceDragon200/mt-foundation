local Luna = assert(foundation.com.Luna)
local m = assert(foundation.com)

local case = Luna:new("foundation.com")

case:describe("format_pretty_unit/1", function (t1)
  t1:test("can format numbers using common prefixes", function (t2)
    t2:assert_eq("1.00y", m.format_pretty_unit(1e-24))
    t2:assert_eq("1.00z", m.format_pretty_unit(1e-21))
    t2:assert_eq("1.00a", m.format_pretty_unit(1e-18))
    t2:assert_eq("1.00f", m.format_pretty_unit(1e-15))
    t2:assert_eq("1.00p", m.format_pretty_unit(1e-12))
    t2:assert_eq("1.00n", m.format_pretty_unit(1e-9))
    t2:assert_eq("1.00μ", m.format_pretty_unit(1e-6))
    t2:assert_eq("1.00m", m.format_pretty_unit(1e-3))
    t2:assert_eq("1.00", m.format_pretty_unit(1))
    t2:assert_eq("1.00k", m.format_pretty_unit(math.pow(10, 3)))
    t2:assert_eq("1.00M", m.format_pretty_unit(math.pow(10, 6)))
    t2:assert_eq("1.00G", m.format_pretty_unit(math.pow(10, 9)))
    t2:assert_eq("1.00T", m.format_pretty_unit(math.pow(10, 12)))
    t2:assert_eq("1.00P", m.format_pretty_unit(math.pow(10, 15)))
    t2:assert_eq("1.00E", m.format_pretty_unit(math.pow(10, 18)))
    t2:assert_eq("1.00Z", m.format_pretty_unit(math.pow(10, 21)))
    t2:assert_eq("1.00Y", m.format_pretty_unit(math.pow(10, 24)))
  end)
end)

case:describe("format_pretty_unit/2", function (t1)
  t1:test("can format numbers using common prefixes and custom suffix", function (t2)
    t2:assert_eq("1.00ym", m.format_pretty_unit(1e-24, "m"))
    t2:assert_eq("1.00zm", m.format_pretty_unit(1e-21, "m"))
    t2:assert_eq("1.00am", m.format_pretty_unit(1e-18, "m"))
    t2:assert_eq("1.00fm", m.format_pretty_unit(1e-15, "m"))
    t2:assert_eq("1.00pm", m.format_pretty_unit(1e-12, "m"))
    t2:assert_eq("1.00nm", m.format_pretty_unit(1e-9, "m"))
    t2:assert_eq("1.00μm", m.format_pretty_unit(1e-6, "m"))
    t2:assert_eq("1.00mm", m.format_pretty_unit(1e-3, "m"))
    t2:assert_eq("1.00m", m.format_pretty_unit(1, "m"))
    t2:assert_eq("1.00km", m.format_pretty_unit(math.pow(10, 3), "m"))
    t2:assert_eq("1.00Mm", m.format_pretty_unit(math.pow(10, 6), "m"))
    t2:assert_eq("1.00Gm", m.format_pretty_unit(math.pow(10, 9), "m"))
    t2:assert_eq("1.00Tm", m.format_pretty_unit(math.pow(10, 12), "m"))
    t2:assert_eq("1.00Pm", m.format_pretty_unit(math.pow(10, 15), "m"))
    t2:assert_eq("1.00Em", m.format_pretty_unit(math.pow(10, 18), "m"))
    t2:assert_eq("1.00Zm", m.format_pretty_unit(math.pow(10, 21), "m"))
    t2:assert_eq("1.00Ym", m.format_pretty_unit(math.pow(10, 24), "m"))
  end)
end)

case:describe("format_pretty_unit/3", function (t1)
  t1:test("can format numbers using provided prefixes", function (t2)
    local all_prefixes = assert(foundation.com.ALL_PREFIXES)

    t2:assert_eq("1.00y", m.format_pretty_unit(1e-24, "", all_prefixes))
    t2:assert_eq("1.00z", m.format_pretty_unit(1e-21, "", all_prefixes))
    t2:assert_eq("1.00a", m.format_pretty_unit(1e-18, "", all_prefixes))
    t2:assert_eq("1.00f", m.format_pretty_unit(1e-15, "", all_prefixes))
    t2:assert_eq("1.00p", m.format_pretty_unit(1e-12, "", all_prefixes))
    t2:assert_eq("1.00n", m.format_pretty_unit(1e-9, "", all_prefixes))
    t2:assert_eq("1.00μ", m.format_pretty_unit(1e-6, "", all_prefixes))
    t2:assert_eq("1.00m", m.format_pretty_unit(1e-3, "", all_prefixes))
    t2:assert_eq("1.00c", m.format_pretty_unit(1e-2, "", all_prefixes))
    t2:assert_eq("1.00d", m.format_pretty_unit(1e-1, "", all_prefixes))
    t2:assert_eq("1.00", m.format_pretty_unit(1, "", all_prefixes))
    t2:assert_eq("1.00da", m.format_pretty_unit(math.pow(10, 1), "", all_prefixes))
    t2:assert_eq("1.00h", m.format_pretty_unit(math.pow(10, 2), "", all_prefixes))
    t2:assert_eq("1.00k", m.format_pretty_unit(math.pow(10, 3), "", all_prefixes))
    t2:assert_eq("1.00M", m.format_pretty_unit(math.pow(10, 6), "", all_prefixes))
    t2:assert_eq("1.00G", m.format_pretty_unit(math.pow(10, 9), "", all_prefixes))
    t2:assert_eq("1.00T", m.format_pretty_unit(math.pow(10, 12), "", all_prefixes))
    t2:assert_eq("1.00P", m.format_pretty_unit(math.pow(10, 15), "", all_prefixes))
    t2:assert_eq("1.00E", m.format_pretty_unit(math.pow(10, 18), "", all_prefixes))
    t2:assert_eq("1.00Z", m.format_pretty_unit(math.pow(10, 21), "", all_prefixes))
    t2:assert_eq("1.00Y", m.format_pretty_unit(math.pow(10, 24), "", all_prefixes))
  end)
end)

case:execute()
case:display_stats()
case:maybe_error()
